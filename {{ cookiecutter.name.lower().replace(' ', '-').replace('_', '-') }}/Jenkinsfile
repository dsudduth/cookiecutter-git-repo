import groovy.json.JsonBuilder
import hudson.Util
pipeline {
  agent {
    node {
      // TODO: Add machine label
      label ''
    }
  }
  environment {
    APPLICATION_NAME = '{{ cookiecutter.name.lower().replace(' ', '-').replace('_', '-') }}'
    VERSION = '{{ cookiecutter.version }}'

  }
  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
    timeout(time: 1, unit: 'HOURS')
    timestamps()
  }
  stages {
    stage('Prepare Environment') {
      steps {
        echo 'Hello'
      }
    }
  }
  post {
    cleanup {
      // Cleaning up after ourselves
      deleteDir()
      cleanWs()
    }
    always {
      // Sending a nice message to Slack
      script {
        if (currentBuild.currentResult == 'SUCCESS') {
          color = 'good'
          statusMessage = 'Woot! This build was a success! ü§ò'
          buttonStyle = 'primary'
        }

        if (currentBuild.currentResult == 'FAILURE') {
          color = 'danger'
          statusMessage = 'Aw Heck! The build is broken. ‚ò†Ô∏è'
          buttonStyle = 'danger'
        }

        def attachmentPayload = [[
          title: "${env.APPLICATION_NAME}, Build #${env.BUILD_NUMBER}",
          title_link: "${env.BUILD_URL}",
          color: "${color}",
          author_name: 'Jenkins',
          author_link: "${env.JENKINS_URL}",
          text: "${statusMessage}",
          fields: [
            [
              title: "Branch",
              value: "${env.BRANCH_NAME}",
              short: true
            ],
            [
              title: 'Duration',
              value: "${Util.getTimeSpanString(System.currentTimeMillis() - currentBuild.startTimeInMillis)}",
              short: true
            ]
          ],
          actions: [
            [
              name: 'Jenkins',
              text: 'See build details',
              type: 'button',
              url: "${env.BUILD_URL}",
              style: "${buttonStyle}"
            ]
          ],
          footer: 'Jenkins'
        ]]
        env.MESSAGE = new JsonBuilder(attachmentPayload).toPrettyString()
      }

      slackSend (
        // TODO: Set appropriate channel name
        channel: '#builds',
        attachments: env.MESSAGE
      )
    }
  }
}
